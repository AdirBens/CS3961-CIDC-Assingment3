# This is Project03/CloudeCourse@Reichman workflow
# By: Benshimol.adir@post.runi.ac.il

name: assignment3
# Workflow will trigger on push events
on: push

jobs:
  # [Job 1] build - Builds the image for your service.
  #                 If successful, it proceeds to the second job.
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Create logfile header: timestamp and name of submitter
      - name: Create Logfile Header
        run: |
          echo "$(date -Iminutes)" >> /tmp/log.txt
          echo "Adir ben Shimol" >> /tmp/log.txt

      # Checks-out this repository, so this job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set-up Docker build environment
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # Build nutrition-svc-image:latest
      - name: Build and export docker nutrition-svc-image
        uses: docker/build-push-action@v4
        with:
          context: ./nutrition-svc
          tags: nutrition-svc:latest
          outputs: type=docker, dest=/tmp/nutrition-svc-image.tar

      # Logging image build status
      - name: Log image build success
        if: success()
        run: echo "image successfully built" >> /tmp/log.txt
      - name: Log image build failed
        if: failure()
        run: echo "image not able to be built" >> /tmp/log.txt

      # Upload image and logfile as artifacts
      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
            name: nutrition-svc-image
            path: /tmp/nutrition-svc-image.tar

      - name: Upload logfile
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log.txt
          path: /tmp/log.txt

  # [Job 2] test - Uses the image from the first job to run it in a container
  #                and uses pytest to test the service.
  #                If successful, it proceeds to the third job.
  test:
    needs: build
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Download Logfile artifact from previous job
      - name: Get Logfile artifact
        uses: actions/download-artifact@v3
        with:
          name: log.txt
          path: /tmp

      # Set-up Docker build environment
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # Download nutrition-svc-image:latest artifact from previous job
      - name: Get image artifact
        uses: actions/download-artifact@v3
        with:
          name: nutrition-svc-image
          path: /tmp

      # Load nutrition-svc-image
      - name: Load image from artifact
        run: |
          docker load --input /tmp/nutrition-svc-image.tar

      # Check if nutrition-svc image is loaded
      - name: check nutrition-svc-image is loaded
        run: docker image ls

      # Run nutrition-svc container
      - name: Run nutrition-svc container
        id: "run-svc"
        run: docker run -p 8000:8000 -d nutrition-svc-image
      - name: Check container is running
        run: docker ps

      # Logging nutrition-svc container setup
      - name: Log container setup success
        if: success()
        run: echo "Container up and running" >> /tmp/log.txt
      - name: Log container setup failed
        if: failure()
        run: echo "Container failed to run" >> /tmp/log.txt

      # Checks-out this repository, so this job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set-up Python environment and dependencies
      - name: Set-up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Test nutrition-svc using PyTest
      - name: Test with pytest  # additionally use ruff or other lint checkers
        id: "run-tests"
        run: pytest -v ./tests/assn3_tests.py > ./tests/assn3_test_results.txt

      # Logging tests status
      - name: Log tests success
        if: always()
        run: |
          if ${{ steps.run-svc.outcome == 'success' && steps.run-tests.outcome == 'success'}}
          then
            echo "tests succeeded" >> /tmp/log.txt
          fi
      - name: Log tests failed
        if: always()
        run: |
          if ${{ steps.run-svc.outcome == 'success' && steps.run-tests.outcome == 'success'}}
          then
            echo "tests failed" >> /tmp/log.txt
          fi

      # Upload logfile and tests-results as artifacts
      - name: Upload tests-results artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: assn3_test_results.txt
          path: /tmp/assn3_test_results.txt

      - name: Upload logfile
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log.txt
          path: /tmp/log.txt

  # [Job 3] query - Uses the image from the first job to run it in a container
  #                 and issue specific requests to the service and record the results in a file.
  #                 If successful, it proceeds to the third job.
  query:
    needs: test
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set-up Docker build environment
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # Download nutrition-svc-image:latest artifact from previous job
      - name: Get image artifact
        uses: actions/download-artifact@v3
        with:
          name: nutrition-svc-image
          path: /tmp

      # Load nutrition-svc-image
      - name: Load image from artifact
        run: |
          docker load --input /tmp/nutrition-svc-image.tar

      # Check if nutrition-svc image is loaded
      - name: check nutrition-svc-image is loaded
        run: docker image ls

      # Run nutrition-svc container
      - name: Run nutrition-svc container
        id: "run-svc"
        run: docker run -p 8000:8000 -d nutrition-svc-image
      - name: Check container is running
        run: docker ps

      # Checks-out this repository, so this job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set-up Python environment and dependencies
      - name: Set-up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run Queries using query_agent
      - name: Run queries
        run: python ./query_agent.py >> /tmp/response.txt

      # Upload query results
      - name: Upload query-results artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: response.txt
          path: /tmp/response.txt
